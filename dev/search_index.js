var documenterSearchIndex = {"docs":
[{"location":"functions.html#Systems","page":"References","title":"Systems","text":"","category":"section"},{"location":"functions.html#Potentials","page":"References","title":"Potentials","text":"","category":"section"},{"location":"functions.html#OrbitalElements.ψ","page":"References","title":"OrbitalElements.ψ","text":"ψ(r, model::Potential)\n\nPotential value for central potential model at radius r.\n\n\n\n\n\nthe Hernquist potential\n\n\n\n\n\n","category":"function"},{"location":"functions.html#OrbitalElements.dψ","page":"References","title":"OrbitalElements.dψ","text":"dψ(r, model::Potential)\n\nPotential derivative value for central potential model at radius r.\n\n\n\n\n\nthe Hernquist potential derivative\n\n\n\n\n\n","category":"function"},{"location":"functions.html#OrbitalElements.d2ψ","page":"References","title":"OrbitalElements.d2ψ","text":"d2ψ(r, model::Potential)\n\nPotential second derivative for central potential model at radius r.\n\n\n\n\n\nthe Hernquist potential second derivative\n\n\n\n\n\n","category":"function"},{"location":"functions.html#Distribution-functions","page":"References","title":"Distribution functions","text":"","category":"section"},{"location":"functions.html","page":"References","title":"References","text":"","category":"page"},{"location":"functions.html#Changes-of-coordinates","page":"References","title":"Changes of coordinates","text":"","category":"section"},{"location":"functions.html#Isochrone-specific-functions","page":"References","title":"Isochrone specific functions","text":"","category":"section"},{"location":"functions.html#Plummer-specific-functions","page":"References","title":"Plummer specific functions","text":"","category":"section"},{"location":"functions.html#Utility-functions","page":"References","title":"Utility functions","text":"","category":"section"},{"location":"manual.html","page":"Manual","title":"Manual","text":"","category":"page"},{"location":"manual.html#Potentials","page":"Manual","title":"Potentials","text":"","category":"section"},{"location":"manual.html","page":"Manual","title":"Manual","text":"OrbitalElements ships with a handful of simple potential models for testing purposes. These are located in src/Potential: (1) the 3d Isochrone potential, (2) the 3d Plummer potential, (3) the 2d Mestel-Zang disc, and (4) the 2d Kuzmin-Toomre disc. Corresponding distribution functions are located in src/DistributionFunctions.","category":"page"},{"location":"manual.html","page":"Manual","title":"Manual","text":"","category":"page"},{"location":"manual.html#Obtaining-Orbital-Frequencies","page":"Manual","title":"Obtaining Orbital Frequencies","text":"","category":"section"},{"location":"manual.html","page":"Manual","title":"Manual","text":"The principal use for OrbitalElements is to provide descriptions of orbits. This means","category":"page"},{"location":"manual.html","page":"Manual","title":"Manual","text":"Conversion from (semimajor axis, eccentricity) to (pericentre, apocentre) to (energy, angular momentum), to coordinates aligned with resonance vectors.\nAdditional support for actions and angles.","category":"page"},{"location":"manual.html","page":"Manual","title":"Manual","text":"frequencies_from_ae(a,e,model,params) will compute frequencies (Ω₁,Ω₂) given a potential model, for an orbit described by semimajor axis and eccentricity.","category":"page"},{"location":"manual.html","page":"Manual","title":"Manual","text":"","category":"page"},{"location":"manual.html#Obtaining-resonant-coordinates","page":"Manual","title":"Obtaining resonant coordinates","text":"","category":"section"},{"location":"manual.html","page":"Manual","title":"Manual","text":"UVFromαβ(α,β,n₁,n₂,ωmin,ωmax) will compute the resonant mappings (u,v) for a given frequency pair (α,β), resonance vector (n₁,n₂), and frequency limits.","category":"page"},{"location":"installation.html#OrbitalElements.jl","page":"Quick start","title":"OrbitalElements.jl","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"(Image: image) (Image: image) (Image: image) (Image: image) (Image: codecov) (Image: image) (Image: image)","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"OrbitalElements is a package written in Julia to compute numerical elements for astronomical orbits to high precision, for arbitrary potentials.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"This is version 2.0. If you are looking for backward compatibility, please see the branch v1.9.1.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Quick-installation-and-use-test","page":"Quick start","title":"Quick installation and use test","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Install Julia by following the instructions at julialang.org/downloads/.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"To invoke Julia in the Terminal, you need to make sure that the julia command-line program is in your PATH.  See here for detailed instructions.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"We will now proceed to the installation of the OrbitalElements library.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Caution: If you wish to exercise extra care to prevent any interference with other installed libraries (e.g., avoiding updates), please refer to the \"Notes on working with environments\" section below.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Install the OrbitalElements library by running","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"julia -e 'using Pkg; Pkg.add(url=\"https://github.com/JuliaStellarDynamics/OrbitalElements.jl.git\")'","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"An introduction example is given in examples/test_OrbitalElements.jl. Download the file by running:","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"wget https://raw.githubusercontent.com/JuliaStellarDynamics/OrbitalElements.jl/main/examples/test_OrbitalElements.jl","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Then run the code with the following command","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"julia test_OrbitalElements.jl","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"This example will first install some required libraries (Plots, LaTeXStrings) and their dependencies. These installations might take up to 4 minutes. If it fails have a look at known issues, open an issue or contact us","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"The resulting plots will be created in the same folder as the test code under the names IsochroneFrequencies.png","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"and ForwardBackwardErrors.png.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Known-issues","page":"Quick start","title":"Known issues","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"With julia versions < 1.9, Plots might fails to precompile due to FFMPEG and BinaryProvider: Plots probably installed an old version of FFMPEG while newer are supported (BinaryProvider is outdated). Force the update of FFMPEG and recompile by running:","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"julia -e 'using Pkg; Pkg.update(\"FFMPEG\");Pkg.precompile();'","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"<sup><sub>Do not forget the --project=/path/to/my_env option if you are running in a local environment.</sub></sup>","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Note-on-working-with-environments","page":"Quick start","title":"Note on working with environments","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"By default, packages are added to the default environment at ~/.julia/environments/v1.#. It is however easy to create other, independent, projects. If you want to install the OrbitalElements package in a different/test environment, first create a folder to host the environment files (Project.toml and Manifest.toml which will be created later on). Then, for every command line invoking Julia, use julia --project=/path/to/my_env instead of julia alone.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Note that packages will always be cloned in ~/.julia/packages but only accessible in your project's context.  A procedure to fully uninstall the package is described at the end of this readme.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Interactive-notebook","page":"Quick start","title":"Interactive notebook","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"If you prefer interactive Jupyter notebooks, you will need to install IJulia following these instructions.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"An interactive introduction example is then in examples/test_OrbitalElements.ipynb.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Without-installing-Julia","page":"Quick start","title":"Without installing Julia","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"If you do not want to install Julia but want to test the library, you can use this Google colab notebook. However, Google colab is not primarly made to run Julia code.  It will then need to be installed on the remote machine which can take a few minutes. This notebook is not maintained as a priority. We would recommend you install Julia on your machine to test the library locally.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Documentation-and-usage","page":"Quick start","title":"Documentation and usage","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"To get more familiar with the content of the library and start and design your own use case, you may want to visit the documentation.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Uninstall","page":"Quick start","title":"Uninstall","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"First start by removing the package from the environment by running","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"julia -e 'using Pkg; Pkg.rm(\"OrbitalElements\");'","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Following the same syntax, you can also remove the Plots and LaTeXString packages installed for the example if you want to. ","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"If you worked in a test environment (that you do not want to keep) you can also simply erase the folder using rm -r /path/to/my_env.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Then to fully erase the package (installed in ~/.julia), run","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"julia -e 'using Pkg; using Dates; Pkg.gc(collect_delay=Day(0));'","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"<sup><sub>No need for the --project=/path/to/my_env option here !</sub></sup>","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"It will erase all the packages which are not known in any of your \"active\" (i.e., for which the Manifest.toml file is reachable) project/environments, in particular OrbitalElements.","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"","category":"page"},{"location":"installation.html#Authors","page":"Quick start","title":"Authors","text":"","category":"section"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Mike Petersen -  @michael-petersen - michael.petersen@roe.ac.uk","category":"page"},{"location":"installation.html","page":"Quick start","title":"Quick start","text":"Mathieu Roule -  @MathieuRoule - roule@iap.fr","category":"page"},{"location":"index.html#OrbitalElements.jl","page":"Home","title":"OrbitalElements.jl","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Conversions between orbital constants for galactic dynamics in Julia.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Purpose-and-Scope","page":"Home","title":"Purpose and Scope","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"OrbitalElements provides changes of variables between various orbital constant/integrals in self-gravitating systems. It is tailored for a specific set of systems, focusing on scenarios for linear response computations.  By narrowing its scope, the library maintains clarity and efficiency in handling orbital dynamics within these systems.  While it may not offer the generality of other related libraries (galpy, AGAMA...), it excels in its targeted application domain.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"For now, OrbitalElements specializes in handling orbits confined to a plane, such as in razor-thin discs or spherical systems, within central potentials.  While its primary focus lies in these specific systems, it will be extended to encompass other systems in the future.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Planar-orbits","page":"Home","title":"Planar orbits","text":"","category":"section"},{"location":"index.html#Constants-of-motion","page":"Home","title":"Constants of motion","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Given a central potential model, OrbitalElements provides mapping functions and jacobians  between the following constants of motion","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Model-independent constants\nsemi-major axis and eccentricity: (ae)\npericentre and apocentre: (r_pr_a)\n\"Analytic\" constants\nenergy and angular momentum: (EL)\n\"Integrated\" constants\nactions: (JL)\nfrequency ratios: (alphabeta)\nfrequencies: (Omega_1Omega_2)","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"While explicit formulae for actions are often given as a function of (r_pr_a), the (ae)-domain is more suitable to handle close-to-the-edge cases (near circular or near radial orbits) and to cure divergences in frequency computations.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Semi-major axis and eccentricity are therefore used as base constants, so that, e.g., going from actions to frequencies would in practice require performing (JL)to(ae)to(Omega_1Omega_2) (as no explicit formulae exists to generically convert actions in frequencies).","category":"page"},{"location":"index.html#Resonance-variables","page":"Home","title":"Resonance variables","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"For a given potential, one can also compute the resonance mappings, called (uv), defined in Fouvry & Prunet (2022).  These mappings depend on the resonance vector (n_1n_2) and prove particularly useful for linear response' computations. See src/mappings/Resonance for associated conversions.","category":"page"}]
}
